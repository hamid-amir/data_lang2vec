======================= USING THE SAME FEATURES OF THE FIND_MISSING CLASSIFIER =======================
- without any hyperparameter optimization, pylogency features: 10 components using PCA

    Training random forest
    Base acc.: 64.41
    Model acc.: 84.47
    f1 score 0's: 88.35
    recall 0's: 91.42
    precision 0's: 85.48
    seconds: 146.28

    Training logistic regression
    Base acc.: 64.41
    Model acc.: 64.37
    f1 score 0's: 78.30
    recall 0's: 99.83
    precision 0's: 64.42
    seconds: 15.58

    Training gradient boosting
    Base acc.: 64.41
    Model acc.: 73.88
    f1 score 0's: 82.77
    recall 0's: 97.43
    precision 0's: 71.95
    seconds: 1198.92

    Training XGBoost
    Base acc.: 64.41
    Model acc.: 80.58
    f1 score 0's: 85.64
    recall 0's: 89.86
    precision 0's: 81.79
    seconds: 496.47

    Training decision tree
    Base acc.: 64.41
    Model acc.: 83.42
    f1 score 0's: 87.24
    recall 0's: 88.03
    precision 0's: 86.47
    seconds: 107.61

    Training KNN
    Base acc.: 64.41
    Model acc.: 61.01
    f1 score 0's: 71.69
    recall 0's: 76.64
    precision 0's: 67.33
    seconds: 67.35

    Training naive bayes
    Base acc.: 64.41
    Model acc.: 63.96
    f1 score 0's: 77.84
    recall 0's: 98.24
    precision 0's: 64.45
    seconds: 6.04

    Training multi layer perceptron
    Base acc.: 64.41
    Model acc.: 65.63
    f1 score 0's: 75.36
    recall 0's: 81.61
    precision 0's: 70.00
    seconds: 318.59